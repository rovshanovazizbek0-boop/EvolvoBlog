==> Downloading cache...
==> Cloning from https://github.com/rovshanovazizbek0-boop/EvolvoBlog
==> Checking out commit 85d3656dbd70b9c7b3e15371d7283efe0c069669 in branch main
==> Transferred 230MB in 8s. Extraction took 6s.
==> Requesting Node.js version >=18.0.0
==> Using Node.js version 24.8.0 via /opt/render/project/src/package.json
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Running build command 'npm ci && npm run build '...
added 697 packages, and audited 698 packages in 11s
84 packages are looking for funding
  run `npm fund` for details
5 moderate severity vulnerabilities
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.20 building for production...
transforming...
✓ 2167 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                        3.07 kB │ gzip:   1.17 kB
../dist/public/assets/index-C2K-saNd.css        90.16 kB │ gzip:  14.90 kB
../dist/public/assets/purify.es-CQJ0hv7W.js     21.82 kB │ gzip:   8.58 kB
../dist/public/assets/index.es-BxO9zLdJ.js     150.42 kB │ gzip:  51.39 kB
../dist/public/assets/index-B0ZtY-hR.js      1,541.63 kB │ gzip: 419.35 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 7.85s
  dist/index.js  93.9kb
⚡ Done in 7ms
==> Uploading build...
==> Uploaded in 8.7s. Compression took 4.6s
==> Build successful 🎉
==> Deploying...
==> Running 'npm start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Connecting to database...
DATABASE_URL is set: true
NODE_ENV: production
🔧 Validating Telegram bot configuration...
🔍 Validating Telegram channel chat access: -1002799814854
🔗 New database connection established
✅ Database connection successful
🔍 Validating Telegram admin chat access: 8325332204
✅ Successfully validated admin chat: 8325332204
❌ Telegram configuration has errors:
   - Blog channel validation failed: Bot cannot access channel chat (-1002799814854): Bad Request: chat not found
⚠️  TELEGRAM CONFIGURATION ISSUES DETECTED:
❌ Blog channel validation failed: Bot cannot access channel chat (-1002799814854): Bad Request: chat not found
📋 Telegram Bot Setup Instructions:
1. Create a Telegram Bot:
   - Message @BotFather on Telegram
   - Send /newbot and follow instructions
   - Copy the bot token and set TELEGRAM_BOT_TOKEN environment variable
2. Set up Blog Channel (optional):
   - Create a Telegram channel for blog posts
   - Add your bot as an admin to the channel
   - Get the channel ID (starts with -100) and set TELEGRAM_CHANNEL_ID
3. Set up Admin Channel (optional):
   - Create a Telegram channel/group for order notifications
   - Add your bot as an admin
   - Get the channel ID and set TELEGRAM_ADMIN_CHANNEL_ID
4. How to get Channel ID:
   - Forward a message from the channel to @userinfobot
   - Or use @RawDataBot to get chat information
   - Channel IDs typically start with -100
5. Environment Variables to set:
   TELEGRAM_BOT_TOKEN=your_bot_token_here
   TELEGRAM_CHANNEL_ID=your_channel_id_here
   TELEGRAM_ADMIN_CHANNEL_ID=your_admin_channel_id_here
📌 Current Configuration:
   Bot Token: ✅ Set
   Blog Channel: ✅ Set (-1002799814854)
   Admin Channel: ✅ Set (8325332204)
📝 Note: Blog posts will still be generated and published to the website, but Telegram posting will be skipped.
🔧 Fix the above issues to enable Telegram posting.
📅 Production mode: Blog scheduler will be triggered by external webhooks
📌 Set up external cron services to call:
   - POST /api/webhooks/generate-daily-posts (daily at 23:00 Tashkent)
   - POST /api/webhooks/publish-scheduled (every 5 minutes)
4:02:05 AM [express] serving on port 5000
==> Your service is live 🎉
==> 
==> ///////////////////////////////////////////////////////////
==> 
==> Available at your primary URL https://evolvoblog.onrender.com
==> 
==> ///////////////////////////////////////////////////////////
4:04:20 AM [express] POST /api/admin/test-single-blog 200 in 104ms
4:04:22 AM [express] POST /api/admin/test-blog-generation 200 in 56ms
4:04:24 AM [express] POST /api/admin/publish-scheduled 200 in 58ms
4:04:26 AM [express] POST /api/admin/test-single-blog 200 in 59ms
4:04:27 AM [express] POST /api/admin/test-single-blog 200 in 77ms
4:04:28 AM [express] POST /api/admin/publish-scheduled 200 in 56ms
==> Detected service running on port 5000
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
