==> Downloading cache...
==> Cloning from https://github.com/rovshanovazizbek0-boop/EvolvoBlog
==> Checking out commit 0bd428e6610c2ecd0a52b9fdc612d54f17582b24 in branch main
==> Transferred 230MB in 8s. Extraction took 4s.
==> Requesting Node.js version >=18.0.0
==> Using Node.js version 24.8.0 via /opt/render/project/src/package.json
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Running build command 'npm ci && npm run build '...
added 697 packages, and audited 698 packages in 7s
84 packages are looking for funding
  run `npm fund` for details
5 moderate severity vulnerabilities
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.20 building for production...
transforming...
âœ“ 2164 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                        3.07 kB â”‚ gzip:   1.17 kB
../dist/public/assets/index-CF2Uhumf.css        89.12 kB â”‚ gzip:  14.75 kB
../dist/public/assets/purify.es-CQJ0hv7W.js     21.82 kB â”‚ gzip:   8.58 kB
../dist/public/assets/index.es-CpTvASHG.js     150.42 kB â”‚ gzip:  51.39 kB
../dist/public/assets/index-CSI4l-kZ.js      1,513.74 kB â”‚ gzip: 412.76 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 5.56s
  dist/index.js  54.8kb
âš¡ Done in 6ms
==> Uploading build...
==> Uploaded in 8.7s. Compression took 3.4s
==> Build successful ðŸŽ‰
==> Deploying...
==> Running 'npm start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Warning: connect.session() MemoryStore is not
designed for a production environment, as it will leak
memory, and will not scale past a single process.
Failed to initialize default data: Error: getaddrinfo ENOTFOUND dpg-d312ged6ubrc73c1018g-a
    at /opt/render/project/src/node_modules/pg-pool/index.js:45:11
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async file:///opt/render/project/src/node_modules/drizzle-orm/node-postgres/session.js:83:22
    at async DatabaseStorage.getServices (file:///opt/render/project/src/dist/index.js:230:16)
    at async initializeDefaultServices (file:///opt/render/project/src/dist/index.js:1283:30)
    at async registerRoutes (file:///opt/render/project/src/dist/index.js:909:3)
    at async file:///opt/render/project/src/dist/index.js:1455:18 {
  errno: -3008,
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'dpg-d312ged6ubrc73c1018g-a'
}
Blog scheduler started
3:32:54 AM [express] serving on port 5000
==> Your service is live ðŸŽ‰
==> 
==> ///////////////////////////////////////////////////////////
==> 
==> Available at your primary URL https://evolvoblog.onrender.com
==> 
==> ///////////////////////////////////////////////////////////